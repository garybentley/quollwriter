<update-script from="0" to="1">
  <item>
    <log>Create the key_sequence sequence.</log>
    <sql>
CREATE SEQUENCE key_sequence START WITH 1 INCREMENT BY 1
    </sql>
  </item>
  <item>
    <log>Create dataobject table.</log>
    <sql>
CREATE TABLE dataobject
(
  dbkey BIGINT DEFAULT (NEXT VALUE FOR key_sequence) NOT NULL,
  objecttype VARCHAR(255),
  datecreated TIMESTAMP,
  properties CLOB,
  version UUID DEFAULT RANDOM_UUID(),
  id UUID DEFAULT RANDOM_UUID(),
  latest BOOLEAN DEFAULT TRUE,
  PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create namedobject table.</log>
    <sql>
CREATE TABLE namedobject
(
    dbkey BIGINT NOT NULL,
    name CLOB,
    description CLOB,
    userobjecttypedbkey BIGINT,
    markup CLOB,
    files CLOB,
    lastmodified TIMESTAMP,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create project table.</log>
    <sql>
CREATE TABLE project
(
    dbkey BIGINT NOT NULL,
    lastedited TIMESTAMP,
    schema_version SMALLINT DEFAULT 1,
    type VARCHAR(100) DEFAULT 'normal' NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create book table.</log>
    <sql>
CREATE TABLE book
(
    dbkey BIGINT NOT NULL,
    projectdbkey BIGINT NOT NULL,
    index INTEGER,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create chapter table.</log>
    <sql>
CREATE TABLE chapter
(
    dbkey BIGINT NOT NULL,
    bookdbkey BIGINT NOT NULL,
    text CLOB,
    markup CLOB,
    index INTEGER,
    goals CLOB,
    goalsmarkup CLOB,
    plan CLOB,
    planmarkup CLOB,
    editposition INTEGER,
    editcomplete BOOLEAN,
    projectversiondbkey BIGINT,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create the warmup table.</log>
    <sql>
CREATE TABLE warmup
(
    dbkey BIGINT NOT NULL,
    chapterdbkey BIGINT NOT NULL,
    promptid CHAR(50) NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create character table.</log>
    <sql>
CREATE TABLE character
(
    dbkey BIGINT NOT NULL,
    projectdbkey BIGINT NOT NULL,
    aliases CLOB,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create location table.</log>
    <sql>
CREATE TABLE location
(
    dbkey BIGINT NOT NULL,
    projectdbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create note table.</log>
    <sql>
CREATE TABLE note
(
    dbkey BIGINT NOT NULL,
    due TIMESTAMP,
    type VARCHAR(255),
    position INTEGER,
    end_position INTEGER,
    objectdbkey BIGINT NOT NULL,
    objectversion UUID NOT NULL,
    dealtwith TIMESTAMP,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create outlineitem table.</log>
    <sql>
CREATE TABLE outlineitem
(
    dbkey BIGINT NOT NULL,
    position INTEGER,
    chapterdbkey BIGINT NOT NULL,
    scenedbkey BIGINT,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create scene table.</log>
    <sql>
CREATE TABLE scene
(
    dbkey BIGINT NOT NULL,
    position INTEGER,
    chapterdbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create qobject table.</log>
    <sql>
CREATE TABLE qobject
(
    dbkey BIGINT NOT NULL,
    type VARCHAR(255),
    projectdbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create researchitem table.</log>
    <sql>
CREATE TABLE researchitem
(
    dbkey BIGINT NOT NULL,
    url CLOB,
    projectdbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create link table.</log>
    <sql>
CREATE TABLE link
(
    dbkey BIGINT NOT NULL,
    object1dbkey BIGINT,
    object1objtype VARCHAR(255),
    object2dbkey BIGINT,
    object2objtype VARCHAR(255)
)
    </sql>
  </item>

  <item>
    <log>Create the wordcount table.</log>
    <sql>
CREATE TABLE wordcount
(
    projectdbkey BIGINT NOT NULL,
    chapterdbkey BIGINT NOT NULL,
    start TIMESTAMP NOT NULL,
    end TIMESTAMP NOT NULL,
    count INT NOT NULL
)
    </sql>
  </item>

  <item>
    <log>Create the actionlog table.</log>
    <sql>
CREATE TABLE actionlog
(
    onobjectdbkey BIGINT,
    when TIMESTAMP NOT NULL,
    message CLOB,
    changes BLOB,
    digest CLOB
)
    </sql>
  </item>

  <item>
    <log>Create the problemfinderignore table.</log>
    <sql>
CREATE TABLE problemfinderignore
(
    chapterdbkey BIGINT NOT NULL,
    ruleid VARCHAR(1000) NOT NULL,
    startposition BIGINT NOT NULL,
    wordposition INT NOT NULL,
    issueid CLOB
)
    </sql>
  </item>

  <item>
    <log>Create the ideatype table.</log>
    <sql>
CREATE TABLE ideatype
(
    dbkey BIGINT NOT NULL,
    sortby VARCHAR(255),
    icontype VARCHAR(255),
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create the idea table.</log>
    <sql>
CREATE TABLE idea
(
    dbkey BIGINT NOT NULL,
    ideatypedbkey BIGINT NOT NULL,
    rating INT,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create the projectversion table.</log>
    <sql>
CREATE TABLE projectversion
(
    dbkey BIGINT NOT NULL,
    due TIMESTAMP,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Add the asset table</log>
    <sql>
CREATE TABLE asset
(
    dbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Add the user object field table</log>
    <sql>
CREATE TABLE userobjectfield
(
    dbkey BIGINT NOT NULL,
    namedobjectdbkey BIGINT NOT NULL,
    -- This references userobjecttypefield.dbkey in the project info schema so we can't foreign key constrain.
    userobjecttypefielddbkey BIGINT NOT NULL,
    value CLOB,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for asset(dbkey)/namedobject(dbkey).</log>
    <sql>
ALTER TABLE asset ADD CONSTRAINT asset_dbkey___namedobject_dbkey_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for userobjectfield(dbkey)/namedobject(dbkey).</log>
    <sql>
ALTER TABLE userobjectfield ADD CONSTRAINT userobjfield_dbkey___namedobject_dbkey_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <!--
      We reference namedobject.dbkey here rather than userobject.dbkey since there are existing objects that may not be added
      to userobject, for example characters.
    -->
    <log>Create foreign key constraint for userobjectfield(userobjectdbkey)/namedobject(dbkey).</log>
    <sql>
ALTER TABLE userobjectfield ADD CONSTRAINT userobjfield_userobjdbkey___namedobject_dbkey_fk FOREIGN KEY(namedobjectdbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for projectversion(dbkey)/namedobject(dbkey).</log>
    <sql>
ALTER TABLE projectversion ADD CONSTRAINT projver_dbkey_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for idea/ideatype.</log>
    <sql>
ALTER TABLE idea ADD CONSTRAINT idea_ideatype_fk FOREIGN KEY(ideatypedbkey) REFERENCES ideatype(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for problemfinderignore/chapter.</log>
    <sql>
ALTER TABLE problemfinderignore ADD CONSTRAINT problemfinderignore_chapter_fk FOREIGN KEY(chapterdbkey) REFERENCES chapter(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for chapter(projectversiondbkey)/projectversion(dbkey).</log>
    <sql>
ALTER TABLE chapter ADD CONSTRAINT chapter_projverdbkey_projver_fk FOREIGN KEY(projectversiondbkey) REFERENCES projectversion(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for actionlog/namedobject.</log>
    <sql>
ALTER TABLE actionlog ADD CONSTRAINT actionlog_namedobject_fk FOREIGN KEY(onobjectdbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for wordcount/project.</log>
    <sql>
ALTER TABLE wordcount ADD CONSTRAINT wordcount_project_fk FOREIGN KEY(projectdbkey) REFERENCES project(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for wordcount/chapter.</log>
    <sql>
ALTER TABLE wordcount ADD CONSTRAINT wordcount_chapter_fk FOREIGN KEY(chapterdbkey) REFERENCES chapter(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for book/project.</log>
    <sql>
ALTER TABLE book ADD CONSTRAINT book_project_fk FOREIGN KEY(projectdbkey) REFERENCES project(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for chapter/book.</log>
    <sql>
ALTER TABLE chapter ADD CONSTRAINT chapter_book_fk FOREIGN KEY(bookdbkey) REFERENCES book(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for outlineitem/chapter.</log>
    <sql>
ALTER TABLE outlineitem ADD CONSTRAINT outlineitem_chapter_fk FOREIGN KEY(chapterdbkey) REFERENCES chapter(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for outlineitem/scene.</log>
    <sql>
ALTER TABLE outlineitem ADD CONSTRAINT outlineitem_scene_fk FOREIGN KEY(scenedbkey) REFERENCES scene(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for scene/chapter.</log>
    <sql>
ALTER TABLE scene ADD CONSTRAINT scene_chapter_fk FOREIGN KEY(chapterdbkey) REFERENCES chapter(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for character/project.</log>
    <sql>
ALTER TABLE character ADD CONSTRAINT character_project_fk FOREIGN KEY(projectdbkey) REFERENCES project(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for namedobject/dataobject.</log>
    <sql>
ALTER TABLE namedobject ADD CONSTRAINT namedobject_dataobject_fk FOREIGN KEY(dbkey) REFERENCES dataobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for location/project.</log>
    <sql>
ALTER TABLE location ADD CONSTRAINT location_project_fk FOREIGN KEY(projectdbkey) REFERENCES project(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for note(objectdbkey)/namedobject.</log>
    <sql>
ALTER TABLE note ADD CONSTRAINT note_objdbkey_namedobject_fk FOREIGN KEY(objectdbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for qobject/project.</log>
    <sql>
ALTER TABLE qobject ADD CONSTRAINT qobject_project_fk FOREIGN KEY(projectdbkey) REFERENCES project(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for researchitem/project.</log>
    <sql>
ALTER TABLE researchitem ADD CONSTRAINT researchitem_project_fk FOREIGN KEY(projectdbkey) REFERENCES project(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for book/namedobject.</log>
    <sql>
ALTER TABLE book ADD CONSTRAINT book_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for chapter/namedobject.</log>
    <sql>
ALTER TABLE chapter ADD CONSTRAINT chapter_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for character/namedobject.</log>
    <sql>
ALTER TABLE character ADD CONSTRAINT character_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for location/namedobject.</log>
    <sql>
ALTER TABLE location ADD CONSTRAINT location_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for outlineitem/namedobject.</log>
    <sql>
ALTER TABLE outlineitem ADD CONSTRAINT outlineitem_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for project/namedobject.</log>
    <sql>
ALTER TABLE project ADD CONSTRAINT project_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for qobject/namedobject.</log>
    <sql>
ALTER TABLE qobject ADD CONSTRAINT qobject_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for researchitem/namedobject.</log>
    <sql>
ALTER TABLE researchitem ADD CONSTRAINT researchitem_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for link/namedobject.</log>
    <sql>
ALTER TABLE link ADD CONSTRAINT link_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for link(object1dbkey)/namedobject.</log>
    <sql>
ALTER TABLE link ADD CONSTRAINT link_obj1dbkey_namedobject_fk FOREIGN KEY(object1dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for link(object2dbkey)/namedobject.</log>
    <sql>
ALTER TABLE link ADD CONSTRAINT link_obj2dbkey_namedobject_fk FOREIGN KEY(object2dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for warmup/namedobject.</log>
    <sql>
ALTER TABLE warmup ADD CONSTRAINT warmup_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for warmup/chapter.</log>
    <sql>
ALTER TABLE warmup ADD CONSTRAINT warmup_chapter_fk FOREIGN KEY(chapterdbkey) REFERENCES chapter(dbkey)
    </sql>
  </item>

  <item>
    <log>Add a unique constraint on the id/version dataobject.</log>
    <sql>
ALTER TABLE dataobject ADD CONSTRAINT dataobject_idversion_uk UNIQUE(id, version)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for note.dbkey/objectversion - dataobject.dbkey/version.</log>
    <sql>
ALTER TABLE note ADD CONSTRAINT note_objectdbkeyversion_dataobject_dbkeyversion_fk FOREIGN KEY(objectdbkey, objectversion) REFERENCES dataobject(dbkey, version)
    </sql>
  </item>

  <!--
    Added in v3.1.0
  -->
  <!--
  <item>
    <log>Add the user object type table</log>
    <sql>
  CREATE TABLE userobjecttype
  (
    dbkey BIGINT NOT NULL,
    userobjtype CLOB,
    pluralname CLOB,
    icon24x24 BLOB,
    icon16x16 BLOB,
    layout VARCHAR(255),
    createshortcutkey VARCHAR(255),
    assetobjtype BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (dbkey)
  )
    </sql>
  </item>

  <item>
    <log>Add the user object type field table</log>
    <sql>
  CREATE TABLE userobjecttypefield
  (
    dbkey BIGINT NOT NULL,
    userobjecttypedbkey BIGINT NOT NULL,
    type CLOB,
    definition CLOB,
    PRIMARY KEY (dbkey)
  )
    </sql>
  </item>

  <item>
    <log>Add the tag table</log>
    <sql>
CREATE TABLE tag
(
    dbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for tag(dbkey)/namedobject(dbkey).</log>
    <sql>
ALTER TABLE tag ADD CONSTRAINT tag_dbkey___namedobject_dbkey_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for userobjecttype(dbkey)/namedobject(dbkey).</log>
    <sql>
ALTER TABLE userobjecttype ADD CONSTRAINT userobjtype_dbkey___namedobject_dbkey_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for userobjecttype(dbkey)/userobjecttypefield(userobjecttypedbkey).</log>
    <sql>
ALTER TABLE userobjecttypefield ADD CONSTRAINT userobjtype_dbkey___userobjtypefield_dbkey_fk FOREIGN KEY(userobjecttypedbkey) REFERENCES userobjecttype(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for userobjecttypefield(dbkey)/namedobject(dbkey).</log>
    <sql>
ALTER TABLE userobjecttypefield ADD CONSTRAINT userobjtypefield_dbkey___namedobject_dbkey_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for userobjectfield(userobjecttypefielddbkey)/userobjecttypefield(dbkey).</log>
    <sql>
ALTER TABLE userobjectfield ADD CONSTRAINT userobjfield_userobjecttypefielddbkey___userobjecttypefield_dbkey_fk FOREIGN KEY(userobjecttypefielddbkey) REFERENCES userobjecttypefield(dbkey)
    </sql>
  </item>
-->
</update-script>
